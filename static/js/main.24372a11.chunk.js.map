{"version":3,"sources":["styles/GlobalStyles.js","assets/desktop/bg-image-daytime.jpg","assets/tablet/bg-image-daytime.jpg","assets/mobile/bg-image-daytime.jpg","assets/desktop/bg-image-nighttime.jpg","assets/tablet/bg-image-nighttime.jpg","assets/mobile/bg-image-nighttime.jpg","styles/AppStyles.js","styles/animation.js","layout/MainTimeInfo/styles.js","hooks/useCurrentTime.js","components/Clock/styles.js","assets/desktop/icon-sun.svg","assets/desktop/icon-moon.svg","components/Clock/index.js","components/Quote/styles.js","assets/desktop/icon-refresh.svg","components/Quote/index.js","components/MoreLessButton/styles.js","assets/desktop/icon-arrow-up.svg","components/MoreLessButton/index.js","layout/MainTimeInfo/index.js","layout/TimeStats/styles.js","components/TimeStat/styles.js","components/TimeStat/index.js","layout/TimeStats/index.js","App.js","hooks/useFetchTimeInfo.js","index.js"],"names":["GlobalStyle","createGlobalStyle","AppContainer","styled","div","props","daytime","bgNightDesktop","bgDayDesktop","bgNightTablet","bgDayTablet","bgNightMobile","bgDayMobile","Slider","showMore","css","fadeInKeyframes","keyframes","TimeInfoContainer","time","type","fadeIn","useCurrentTime","date","Date","useState","hour","getHours","minutes","getMinutes","seconds","getSeconds","currentTime","setCurrentTime","useEffect","console","log","setTimeout","setTime","ClockContainer","Greeting","ClockTime","TimeZone","h6","Clock","abbreviation","mql","window","matchMedia","region_name","country_code","loading","timeZone","setTimeZone","a","fetch","response","json","data","fetchTimeZone","src","moonIcon","sunIcon","alt","matches","QuoteContainer","Quote","content","author","quote","setQuote","fetchQuote","onClick","refreshIcon","Button","button","showmore","MoreLessButton","handleShowMore","arrowIcon","MainTimeInfo","TimeStatsContainer","Wrapper","Stat","StatTitle","StatValue","h2","TimeStat","title","value","TimeStats","timezone","day_of_week","day_of_year","week_number","App","setShowMore","timeData","info","error","dayTime","setTimeData","fetchTimeInfo","datetime","useFetchTimeInfo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAGaA,EAAcC,YAAH,8OCHT,MAA0B,6CCA1B,MAA0B,6CCA1B,MAA0B,6CCA1B,MAA0B,+CCA1B,MAA0B,+CCA1B,MAA0B,+CCU5BC,EAAeC,IAAOC,IAAV,siBAaG,SAAAC,GAAK,MAAsB,YAAlBA,EAAMC,QAAwBC,EAAiBC,KAOtD,SAAAH,GAAK,MAAsB,YAAlBA,EAAMC,QAAwBG,EAAgBC,KAIvD,SAAAL,GAAK,MAAsB,YAAlBA,EAAMC,QAAwBK,EAAgBC,KAKxEC,EAASV,IAAOC,IAAV,mEAGf,SAAAC,GAAK,OAAIA,EAAMS,UAAYC,YAAlB,8JCxCPC,EAAkBC,YAAH,4ICCRC,EAAqBf,IAAOC,IAAX,woBDWR,wEAAgC,GAAhC,IAAEe,YAAF,MAAS,KAAT,MAAeC,YAAf,MAAsB,OAAtB,SAAuCL,YAAtC,MAAD,gDACPI,EAAQH,EAAmBI,GCEtCC,CAAO,CAACF,KAAM,QCfLG,EAAiB,SAACH,GAC3B,IAAMI,EAAO,IAAIC,KAAKL,GADc,EAGEM,mBAAS,CAC3CC,KAAMH,EAAKI,WACXC,QAASL,EAAKM,aACdC,QAASP,EAAKQ,eANkB,mBAG7BC,EAH6B,KAGhBC,EAHgB,KAsDpC,OAJAC,qBAAU,YAzCM,WACZ,IAAMJ,EAAUE,EAAYF,QAC5BK,QAAQC,IAAIN,GACI,KAAZA,EAC4B,KAAxBE,EAAYJ,QACa,KAArBI,EAAYN,KACZW,YAAW,WACPJ,EAAe,CACXP,KAAM,EACNE,QAAS,EACTE,QAAS,MAEd,KAEHO,YAAW,WACPJ,EAAe,CACXP,KAAMM,EAAYN,KAAO,EACzBE,QAAS,EACTE,QAAS,MAEd,KAGPO,YAAW,WACPJ,EAAe,CACXP,KAAMM,EAAYN,KAClBE,QAASI,EAAYJ,QAAU,EAC/BE,QAAS,MAEd,KAGPO,YAAW,WACPJ,EAAe,2BACRD,GADO,IAEVF,QAASE,EAAYF,QAAU,OAEpC,KAKPQ,KACD,CAACN,EAAYF,UAET,CAACE,EAAYN,KAAMM,EAAYJ,UCtD7BW,EAAiBpC,IAAOC,IAAV,sHAQdoC,EAAWrC,IAAOC,IAAV,uXAqBRqC,EAAYtC,IAAOC,IAAV,qpBAoCTsC,EAAWvC,IAAOwC,GAAV,6PCnEN,MAA0B,qCCA1B,MAA0B,sC,OCW5BC,EAAQ,SAAC,GAAmC,IAAlCzB,EAAiC,EAAjCA,KAAM0B,EAA2B,EAA3BA,aAAcvC,EAAa,EAAbA,QACjCwC,EAAMC,OAAOC,WAAW,qBADsB,EAG5B1B,EAAeH,GAHa,mBAG7CO,EAH6C,KAGvCE,EAHuC,OAKpBH,mBAAS,CACrCwB,YAAa,GACbC,aAAe,GACfC,SAAS,IARuC,mBAK7CC,EAL6C,KAKnCC,EALmC,KAwBpD,OAbAnB,qBAAU,YACa,uCAAG,8BAAAoB,EAAA,sEACKC,MAAM,+BADX,cACZC,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAIlBL,EAAY,2BACLK,GADI,IAEPP,SAAU,KANI,2CAAH,qDAUnBQ,KACD,IAEC,eAACpB,EAAD,WACI,eAACC,EAAD,WACI,qBAAKoB,IAAiB,YAAZtD,EAAwBuD,EAAWC,EAASC,IAAI,YAC1D,8BAAkB,YAAZzD,EACA,eACY,YAAZA,EACI,eACA,mBACLwC,EAAIkB,QAAU,GAAd,yBAGT,eAACvB,EAAD,WACI,wCAASf,EAAO,GAAK,IAAM,IAAMA,EAAjC,aAA0CE,EAAU,GAAK,IAAM,IAAMA,KACrE,6BAAKiB,OAET,cAACH,EAAD,UAAWU,EAASD,QAAU,KAAnB,aAAgCC,EAASH,YAAzC,YAAwDG,EAASF,oBCjD3Ee,EAAiB9D,IAAOC,IAAV,qiBCFZ,OAA0B,yCCM5B8D,GAAQ,WAAO,IAAD,EAEGzC,mBAAS,CAC/B0C,QAAS,GACTC,OAAQ,KAJW,mBAEhBC,EAFgB,KAETC,EAFS,KAOjBC,EAAU,uCAAG,8BAAAjB,EAAA,sEACQC,MAAM,kCADd,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAIfY,EAAS,eACFZ,IALQ,2CAAH,qDAahB,OAJAxB,qBAAU,WACNqC,MACD,IAGC,eAACN,EAAD,WACI,4BAAII,EAAMF,UACV,wBAAQK,QAASD,EAAjB,SACI,qBAAKX,IAAKa,GAAaV,IAAI,cAE/B,6BAAKM,EAAMD,aC9BVM,GAASvE,IAAOwE,OAAV,ouBAuBb,SAAAtE,GAAK,OAAIA,EAAMuE,UAAY7D,YAAlB,mECzBA,OAA0B,0CCM5B8D,GAAiB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,eAAgBF,EAAc,EAAdA,SAC5C,OACI,eAACF,GAAD,CAAQF,QAASM,EAAgBF,SAAUA,EAA3C,UAEQA,EACM,OACA,OAEV,qBAAKhB,IAAKmB,GAAWhB,IAAI,QAAQa,SAAUA,QCL1CI,GAAe,SAAC,GAAD,IAAEF,EAAF,EAAEA,eAAgBF,EAAlB,EAAkBA,SAAUzD,EAA5B,EAA4BA,KAAM0B,EAAlC,EAAkCA,aAAcvC,EAAhD,EAAgDA,QAAhD,OACxB,eAACY,EAAD,WACI,cAAC,GAAD,IACA,cAAC,EAAD,CAAOC,KAAMA,EAAM0B,aAAcA,EAAcvC,QAASA,IACxD,cAAC,GAAD,CAAgBwE,eAAgBA,EAAgBF,SAAUA,QCXrDK,GAAqB9E,IAAOC,IAAV,4eAGT,SAAAC,GAAK,MAAsB,YAAlBA,EAAMC,QAAwB,oBAAsB,2BAwBtE4E,GAAU/E,IAAOC,IAAV,meC3BP+E,GAAOhF,IAAOC,IAAV,qPACN,SAAAC,GAAK,MAAsB,YAAlBA,EAAMC,QAAwB,QAAU,WAY/C8E,GAAYjF,IAAOwC,GAAV,kVAkBT0C,GAAYlF,IAAOmF,GAAV,wQC7BTC,GAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAOnF,EAAhB,EAAgBA,QAAhB,OACpB,eAAC6E,GAAD,CAAM7E,QAASA,EAAf,UACI,cAAC8E,GAAD,UAAYI,IACZ,cAACH,GAAD,UAAYI,QCDPC,GAAY,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,YAAaxF,EAAa,EAAbA,QACxE,OACI,cAAC2E,GAAD,CAAoB3E,QAASA,EAA7B,SACI,eAAC4E,GAAD,WACI,cAAC,GAAD,CAAUM,MAAO,mBAAoBC,MAAOE,EAAWrF,QAASA,IAChE,cAAC,GAAD,CAAUkF,MAAO,kBAAmBC,MAAOG,EAAatF,QAASA,IACjE,cAAC,GAAD,CAAUkF,MAAO,kBAAmBC,MAAOI,EAAavF,QAASA,IACjE,cAAC,GAAD,CAAUkF,MAAO,cAAeC,MAAOK,EAAaxF,QAASA,UCJhEyF,GAAM,WAAO,IAAD,EACWtE,oBAAS,GADpB,mBACdX,EADc,KACJkF,EADI,KAMfC,ECbsB,WAAO,IAAD,EACFxE,mBAAS,CACrCyE,KAAO,GACP/C,SAAS,EACTgD,OAAQ,EACRC,QAAU,YALoB,mBAC3BH,EAD2B,KACjBI,EADiB,KAQ5BC,EAAa,uCAAG,8BAAAhD,EAAA,6DAClB+C,EAAY,2BACLJ,GADI,IAEP9C,SAAS,KAHK,kBAOSI,MAAM,kCAPf,cAORC,EAPQ,gBAQKA,EAASC,OARd,OAQRyC,EARQ,OAUdG,EAAY,2BACLJ,GADI,IAEP9C,SAAS,EACT+C,UAGJ/D,QAAQC,IAAI8D,GAhBE,kDAkBdG,EAAY,2BACLJ,GADI,IAEP9C,SAAS,EACTgD,MAAM,EAAD,MArBK,0DAAH,qDAiDnB,OAvBAjE,qBAAU,WACNoE,MACD,IAEHpE,qBAAU,WACN,IACMR,EADO,IAAIF,KAAKyE,EAASC,KAAKK,UAClB5E,WACdyE,EAAU,KAGVA,EADA1E,GAAQ,IAAMA,EAAO,EACX,UACHA,GAAQ,IAAMA,EAAO,GAClB,YAEA,UAGd2E,EAAY,2BACLJ,GADI,IAEPG,eAEL,CAACH,EAASC,OAEND,ED5CUO,GAEjB,OAAGP,EAAS9C,QACD,KAIP,cAACjD,EAAD,CAAcI,QAAS2F,EAASG,QAAhC,SACI,eAACvF,EAAD,CAAQC,SAAUA,EAAlB,UACI,cAACd,EAAD,IACI,cAAC,GAAD,CACI8E,eAdG,WACnBkB,GAAalF,IAcG8D,SAAU9D,EACVK,KAAM8E,EAASC,KAAKK,SACpB1D,aAAcoD,EAASC,KAAKrD,aAC5BvC,QAAS2F,EAASG,UAEtB,cAAC,GAAD,CACI9F,QAAS2F,EAASG,QAClBT,SAAUM,EAASC,KAAKP,SACxBC,YAAaK,EAASC,KAAKN,YAC3BC,YAAaI,EAASC,KAAKL,YAC3BC,YAAaG,EAASC,KAAKJ,oBEjCnDW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.24372a11.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    * {\r\n      padding: 0;\r\n      margin: 0;\r\n      box-sizing: border-box;\r\n    }\r\n    \r\n    html {\r\n      font-size: 62.5%;\r\n    }\r\n    \r\n    body {\r\n      font-family: 'Inter', sans-serif;\r\n      \r\n    }\r\n\r\n`","export default __webpack_public_path__ + \"static/media/bg-image-daytime.22955f11.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-daytime.bf5e0ad4.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-daytime.13c049fc.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-nighttime.aa5161f5.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-nighttime.3c0b0370.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-nighttime.a9c730ff.jpg\";","import styled, {css} from \"styled-components\";\r\n\r\nimport bgDayDesktop from '../assets/desktop/bg-image-daytime.jpg'\r\nimport bgDayTablet from '../assets/tablet/bg-image-daytime.jpg'\r\nimport bgDayMobile from '../assets/mobile/bg-image-daytime.jpg'\r\nimport bgNightDesktop from '../assets/desktop/bg-image-nighttime.jpg'\r\nimport bgNightTablet from '../assets/tablet/bg-image-nighttime.jpg'\r\nimport bgNightMobile from '../assets/mobile/bg-image-nighttime.jpg'\r\n\r\n\r\nexport const AppContainer = styled.div`\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: hidden;\r\n  position: relative;\r\n  \r\n\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.daytime === 'evening' ? bgNightDesktop : bgDayDesktop});\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100vh;\r\n    filter: brightness(60%);\r\n    z-index: -1;\r\n\r\n    @media screen and (max-width: 994px) {\r\n      background-image: url(${props => props.daytime === 'evening' ? bgNightTablet : bgDayTablet});\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n      background-image: url(${props => props.daytime === 'evening' ? bgNightMobile : bgDayMobile});\r\n    }\r\n  }\r\n`\r\n\r\nexport const Slider = styled.div`\r\n  transition: all 1s ease;\r\n  \r\n  ${props => props.showMore && css`\r\n    transform: translateY(-50vh);\r\n\r\n    @media screen and (max-width: 994px) {\r\n      transform: translateY(-45vh);\r\n    }\r\n  `}\r\n`","import  {css, keyframes} from 'styled-components'\r\n\r\nconst fadeInKeyframes = keyframes`\r\n  from {\r\n    filter: blur(1px);\r\n    opacity: 0;\r\n  }\r\n  \r\n  to {\r\n    filter: blur(0);\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nexport const fadeIn = ({time = '1s', type = 'ease'} = {}) => css`\r\n  animation: ${time} ${fadeInKeyframes} ${type};\r\n`","import styled from \"styled-components\";\r\nimport {fadeIn} from \"../../styles/animation\";\r\n\r\nexport const TimeInfoContainer  = styled.div`\r\n  overflow: hidden;\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  max-width: 1100px;\r\n  \r\n  margin: 0 auto ;\r\n  padding:5rem 2rem 8rem ;\r\n  \r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  grid-template-areas: \"quote .\" \"clock button \";\r\n  \r\n  ${fadeIn({time: '2s'})};\r\n  \r\n  @media screen and (max-width: 994px) {\r\n    padding: 5rem 10rem 5rem 5rem;\r\n    \r\n    grid-template-rows: 1fr 1fr max-content;\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas: \"quote\" \"clock\" \"button\";\r\n    gap: 10rem;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    padding:5rem 3rem;\r\n    gap: 5rem;\r\n  }\r\n`","import {useEffect, useState} from \"react\";\r\n\r\nexport const useCurrentTime = (time) => {\r\n    const date = new Date(time)\r\n\r\n    const [currentTime, setCurrentTime] = useState({\r\n        hour: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds()\r\n    })\r\n\r\n    const setTime = () => {\r\n        const seconds = currentTime.seconds\r\n        console.log(seconds)\r\n        if (seconds === 59) {\r\n            if (currentTime.minutes === 59) {\r\n                if (currentTime.hour === 11) {\r\n                    setTimeout(() => {\r\n                        setCurrentTime({\r\n                            hour: 0,\r\n                            minutes: 0,\r\n                            seconds: 0\r\n                        })\r\n                    }, 1000)\r\n                } else {\r\n                    setTimeout(() => {\r\n                        setCurrentTime({\r\n                            hour: currentTime.hour + 1,\r\n                            minutes: 0,\r\n                            seconds: 0\r\n                        })\r\n                    }, 1000)\r\n                }\r\n            } else {\r\n                setTimeout(() => {\r\n                    setCurrentTime({\r\n                        hour: currentTime.hour,\r\n                        minutes: currentTime.minutes + 1,\r\n                        seconds: 0\r\n                    })\r\n                }, 1000)\r\n            }\r\n        } else {\r\n            setTimeout(() => {\r\n                setCurrentTime({\r\n                    ...currentTime,\r\n                    seconds: currentTime.seconds + 1\r\n                })\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTime()\r\n    }, [currentTime.seconds])\r\n\r\n    return [currentTime.hour, currentTime.minutes]\r\n}\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const ClockContainer = styled.div`\r\n  color: white;\r\n  grid-area: clock;\r\n  align-self: end;\r\n  display: grid;\r\n  gap: 2rem;\r\n`\r\n\r\nexport const Greeting = styled.div`\r\n  display: flex;\r\n  \r\n  h6 {\r\n    font-size: 20px;\r\n    font-weight: normal;\r\n    line-height: 28px;\r\n    letter-spacing: 4px;\r\n    text-transform: uppercase;\r\n    margin-left: 2rem;\r\n\r\n    @media screen and (max-width: 994px) {\r\n      font-size: 1.8rem;\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport const ClockTime = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n  \r\n  h1 {\r\n    font-size: 20rem;\r\n    font-weight: bold;\r\n    line-height: 20rem;\r\n    letter-spacing: -.5rem;\r\n    \r\n    @media screen and (max-width: 994px) {\r\n      font-size: 17.5rem;\r\n      line-height: 17.5rem;\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n      font-size: 10rem;\r\n      line-height: 10rem;\r\n    }\r\n  }\r\n  \r\n  h4 {\r\n    font-size: 4.8rem;\r\n    margin-left: 2rem;\r\n    font-weight: normal;\r\n    \r\n    @media screen and (max-width: 994px) {\r\n      font-size: 3.2rem;\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport const TimeZone = styled.h6`\r\n  text-transform: uppercase;\r\n  font-size: 2.4rem;\r\n  letter-spacing: .48rem;\r\n\r\n  @media screen and (max-width: 994px) {\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/icon-sun.cb7a2aac.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.83b9f0db.svg\";","import React, {useState, useEffect} from 'react'\r\nimport {useCurrentTime} from \"../../hooks/useCurrentTime\";\r\n\r\nimport {ClockContainer, Greeting, ClockTime, TimeZone} from \"./styles\";\r\n\r\nimport sunIcon from '../../assets/desktop/icon-sun.svg'\r\nimport moonIcon from '../../assets/desktop/icon-moon.svg'\r\n\r\nconst timeZone = 'Mexico, MX'\r\n\r\n\r\nexport const Clock = ({time, abbreviation, daytime}) => {\r\n    const mql = window.matchMedia('(max-width:767px)')\r\n\r\n    const [hour, minutes] = useCurrentTime(time)\r\n\r\n    const [timeZone, setTimeZone] = useState({\r\n        region_name: '',\r\n        country_code : '',\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchTimeZone = async () => {\r\n            const response = await fetch('https://freegeoip.app/json/')\r\n            const data = await response.json()\r\n\r\n            setTimeZone({\r\n                ...data,\r\n                loading : false\r\n            })\r\n        }\r\n\r\n        fetchTimeZone()\r\n    }, [])\r\n    return (\r\n        <ClockContainer>\r\n            <Greeting>\r\n                <img src={daytime === 'evening' ? moonIcon : sunIcon} alt=\"daytime\"/>\r\n                <h6>{(daytime === 'morning'\r\n                    ? 'Good morning'\r\n                    : daytime === 'evening'\r\n                        ? 'Good evening'\r\n                        : 'Good afternoon') +\r\n                    (mql.matches ? '' : `, It's currently`)\r\n                }</h6>\r\n            </Greeting>\r\n            <ClockTime>\r\n                <h1>{`${(hour < 10 ? '0' : '') + hour}:${(minutes < 10 ? '0' : '') + minutes}`}</h1>\r\n                <h4>{abbreviation}</h4>\r\n            </ClockTime>\r\n            <TimeZone>{timeZone.loading ? 'In' : `In ${timeZone.region_name},${timeZone.country_code}`}</TimeZone>\r\n        </ClockContainer>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const QuoteContainer = styled.div`\r\n  color: white;\r\n  \r\n  grid-area: quote;\r\n  display: grid;\r\n  grid-template-columns: 1fr 20px;\r\n  grid-template-rows: max-content max-content;\r\n  gap: 2rem;\r\n  \r\n  \r\n  p {\r\n    font-size: 1.8rem;\r\n    line-height: 2.8rem;\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    border: none;\r\n    height: 3rem;\r\n    display: flex;\r\n    align-items: center;\r\n  }  \r\n  \r\n  h5  {\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    p, h5 {\r\n      font-size: 1.2rem;\r\n      line-height: 2.2rem;\r\n    }\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/media/icon-refresh.dd4042c8.svg\";","import React, {useState, useEffect} from \"react\";\r\n\r\nimport {QuoteContainer} from \"./styles\";\r\n\r\nimport refreshIcon from '../../assets/desktop/icon-refresh.svg'\r\n\r\nexport const Quote = () => {\r\n\r\n    const [quote, setQuote] = useState({\r\n        content: '',\r\n        author: '',\r\n    })\r\n\r\n    const fetchQuote = async () => {\r\n        const response = await fetch('https://api.quotable.io/random')\r\n        const data = await response.json()\r\n\r\n        setQuote({\r\n            ...data\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchQuote()\r\n    }, [])\r\n\r\n    return (\r\n        <QuoteContainer>\r\n            <p>{quote.content}</p>\r\n            <button onClick={fetchQuote}>\r\n                <img src={refreshIcon} alt=\"refresh\"/>\r\n            </button>\r\n            <h5>{quote.author}</h5>\r\n        </QuoteContainer>\r\n    )\r\n}","import styled, {css} from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  grid-area: button;\r\n  justify-self: end;\r\n  align-self: end;\r\n  \r\n  width:  14.6rem;\r\n  height: 5.6rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  \r\n  border: none;\r\n  border-radius: 3.5em;\r\n  background-color: white;\r\n  \r\n  font-size: 1.6rem;\r\n  font-weight: bold;\r\n  line-height: 2.8rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: .5rem;\r\n  \r\n  img {\r\n    transition: transform 1s ease;\r\n    ${props => props.showmore && css`\r\n      transform: rotate(180deg);\r\n  `}\r\n  }\r\n  \r\n  @media screen and (max-width: 994px) {\r\n    justify-self: start;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 1.2rem;\r\n    letter-spacing: .3rem ;\r\n    height: 4rem;\r\n    width: 11.5rem;\r\n    \r\n    img {\r\n      height: 3rem;\r\n    }\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/icon-arrow-up.9f27dbc9.svg\";","import React from \"react\";\r\n\r\nimport {Button} from \"./styles\";\r\n\r\nimport arrowIcon from '../../assets/desktop/icon-arrow-up.svg'\r\n\r\nexport const MoreLessButton = ({handleShowMore, showmore}) => {\r\n    return (\r\n        <Button onClick={handleShowMore} showmore={showmore}>\r\n            {\r\n                showmore\r\n                    ? 'Less'\r\n                    : 'More'\r\n            }\r\n            <img src={arrowIcon} alt=\"arrow\" showmore={showmore}/>\r\n        </Button>\r\n    )\r\n}","import React from \"react\";\r\n\r\nimport {TimeInfoContainer} from \"./styles\";\r\n\r\nimport {Clock} from \"../../components/Clock\";\r\nimport {Quote} from \"../../components/Quote\";\r\nimport {MoreLessButton} from \"../../components/MoreLessButton\";\r\n\r\n\r\nexport const MainTimeInfo = ({handleShowMore, showmore, time, abbreviation, daytime}) => (\r\n    <TimeInfoContainer>\r\n        <Quote/>\r\n        <Clock time={time} abbreviation={abbreviation} daytime={daytime}/>\r\n        <MoreLessButton handleShowMore={handleShowMore} showmore={showmore}/>\r\n    </TimeInfoContainer>\r\n)","import styled from \"styled-components\";\r\n\r\nexport const TimeStatsContainer = styled.div`\r\n  width: 100%;\r\n  height: 50vh;\r\n  background-color: ${props => props.daytime === 'evening' ? 'rgba(0, 0, 0, .7)' : 'rgba(255,255,255, .7)'};\r\n  backdrop-filter: blur(40.7742px);\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 994px) {\r\n    height: 45vh;\r\n  }\r\n  \r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 1px;\r\n    height: 70%;\r\n    background-color:#303030;\r\n    opacity: .25;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 15%;\r\n    @media screen and (max-width: 994px) {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: 1100px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  align-items: center;\r\n  column-gap: 20rem;\r\n\r\n  @media screen and (max-width: 994px) {\r\n    padding: 10rem 5rem;\r\n    column-gap: 4rem;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    padding: 5rem 3rem;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(4, 1fr);\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Stat = styled.div`\r\n  color: ${props => props.daytime === 'evening' ? 'white' : 'black'};\r\n  overflow: scroll;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nexport const StatTitle = styled.h6`\r\n  font-size: 1.5rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: .3rem;\r\n  line-height: 2.8rem;\r\n  font-weight: normal;\r\n  margin-bottom: 2rem;\r\n\r\n  @media screen and (max-width: 994px) {\r\n    font-size: 1.3rem;\r\n    margin: 0;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nexport const StatValue = styled.h2`\r\n  font-size: 5.6rem;\r\n  font-weight: bold;\r\n  line-height: 6.8rem;\r\n\r\n  @media screen and (max-width: 994px) {\r\n    font-size: 4rem;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 2rem;\r\n    line-height: 2.4rem;\r\n  }\r\n`\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport {Stat, StatTitle, StatValue} from \"./styles\";\r\n\r\nexport const TimeStat = ({title, value, daytime}) => (\r\n    <Stat daytime={daytime}>\r\n        <StatTitle>{title}</StatTitle>\r\n        <StatValue>{value}</StatValue>\r\n    </Stat>\r\n)","import React from 'react'\r\n\r\nimport {TimeStatsContainer, Wrapper} from \"./styles\";\r\n\r\nimport {TimeStat} from \"../../components/TimeStat\";\r\n\r\nexport const TimeStats = ({timezone, day_of_week, day_of_year, week_number, daytime}) => {\r\n    return (\r\n        <TimeStatsContainer daytime={daytime}>\r\n            <Wrapper>\r\n                <TimeStat title={'Current timezone'} value={timezone}  daytime={daytime}/>\r\n                <TimeStat title={'Day of the week'} value={day_of_week} daytime={daytime}/>\r\n                <TimeStat title={'Day of the year'} value={day_of_year} daytime={daytime}/>\r\n                <TimeStat title={'Week number'} value={week_number} daytime={daytime}/>\r\n            </Wrapper>\r\n        </TimeStatsContainer>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {useFetchTimeInfo} from \"./hooks/useFetchTimeInfo\";\r\nimport {GlobalStyle} from \"./styles/GlobalStyles\";\r\n\r\nimport {AppContainer, Slider} from \"./styles/AppStyles\";\r\n\r\nimport {MainTimeInfo} from \"./layout/MainTimeInfo\";\r\nimport {TimeStats} from \"./layout/TimeStats\";\r\n\r\nexport const App = () => {\r\n    const [showMore, setShowMore] = useState(false)\r\n\r\n    const handleShowMore = () => {\r\n        setShowMore(!showMore)\r\n    }\r\n    const timeData = useFetchTimeInfo()\r\n\r\n    if(timeData.loading) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <AppContainer daytime={timeData.dayTime}>\r\n            <Slider showMore={showMore}>\r\n                <GlobalStyle/>\r\n                    <MainTimeInfo\r\n                        handleShowMore={handleShowMore}\r\n                        showmore={showMore}\r\n                        time={timeData.info.datetime}\r\n                        abbreviation={timeData.info.abbreviation}\r\n                        daytime={timeData.dayTime}\r\n                    />\r\n                    <TimeStats\r\n                        daytime={timeData.dayTime}\r\n                        timezone={timeData.info.timezone}\r\n                        day_of_week={timeData.info.day_of_week}\r\n                        day_of_year={timeData.info.day_of_year}\r\n                        week_number={timeData.info.week_number}\r\n                    />\r\n            </Slider>\r\n        </AppContainer>\r\n    )\r\n}\r\n\r\n","import {useEffect, useState} from \"react\";\r\n\r\nexport const useFetchTimeInfo = () => {\r\n    const [timeData, setTimeData] = useState({\r\n        info : {},\r\n        loading: true,\r\n        error : false,\r\n        dayTime : 'morning'\r\n    })\r\n\r\n    const fetchTimeInfo = async () => {\r\n        setTimeData({\r\n            ...timeData,\r\n            loading: true\r\n        })\r\n\r\n        try {\r\n            const response = await fetch('http://worldtimeapi.org/api/ip')\r\n            const info = await response.json()\r\n\r\n            setTimeData({\r\n                ...timeData,\r\n                loading: false,\r\n                info\r\n            })\r\n\r\n            console.log(info)\r\n        } catch (e) {\r\n            setTimeData({\r\n                ...timeData,\r\n                loading: false,\r\n                error: e\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetchTimeInfo()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const date = new Date(timeData.info.datetime)\r\n        const hour = date.getHours()\r\n        let dayTime = null\r\n\r\n        if (hour >= 18 && hour < 5) {\r\n            dayTime = 'evening'\r\n        } else if (hour >= 12 && hour < 18) {\r\n            dayTime = 'afternoon'\r\n        } else {\r\n            dayTime = 'morning'\r\n        }\r\n\r\n        setTimeData({\r\n            ...timeData,\r\n            dayTime\r\n        })\r\n    }, [timeData.info])\r\n\r\n    return timeData\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}